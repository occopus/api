#!/usr/bin/env python

# Copyright (C) 2015 MTA SZTAKI

"""
Infrastop
~~~~~~~~~

This script tears down an infrastructure using OCCO-ResourceHandler and
OCCO-InfraProcessor.

An infra_id is required.

Author: adam.visegradi@sztaki.mta.hu
"""

import occo.api.occoapp as occoapp
import yaml

def setup_args(cfg):
    cfg.add_argument('-i','--infraid', dest='infraid', required=True,
                     help='identifier of infrastructure to scale')
    cfg.add_argument('-n','--node', dest='node', required=True,
                     help='name of node to scale')
    cfg.add_argument('-c','--count', dest='count', type=int, required=True,                     help='positive/negative number expressing the direction and magnitude of scaling')

if __name__ == '__main__':

    occoapp.setup(setup_args)

    import logging
    log = logging.getLogger('occo')
    datalog = logging.getLogger('occo.data')
 
    if occoapp.args.count>0:
        log.info("Scaling up node '%s' with %i instances...",
                 occoapp.args.node, occoapp.args.count)
        import occo.enactor.scaling as scaling
    	scaling.add_createnode_request(
            occoapp.args.infraid, occoapp.args.node, occoapp.args.count)
    
    if occoapp.args.count<0:
        log.info("Scaling down node '%s' with %i instances...",
                 occoapp.args.node, abs(occoapp.args.count))
        import occo.enactor.scaling as scaling
    	for i in range(0,abs(occoapp.args.count)):
            scaling.add_dropnode_request(
                occoapp.args.infraid, occoapp.args.node, None)

